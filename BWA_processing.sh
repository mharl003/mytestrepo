#!/bin/bash

##########################
# Setup Slurm Submission #
##########################
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=24 
#SBATCH --mem=25G 
#SBATCH --time=1-04:15:00     # 1 day and 15 minutes
#SBATCH --mail-user=mharl003@ucr.edu
#SBATCH --mail-type=ALL
#SBATCH --job-name="test_BWA_2020_2_18"
#SBATCH -p intel # This is the default partition, you can use any of the following; intel, batch, highmem, gpu
#BWA_script_marcus.sh
#This script is to make read align and collect read counts for the SPACE tomato PARP mutant 
# map reads from in culture with bwa
#This is using tomato ITGA4.0_cDNA  as a assembly
#starting with what worked


#################################
# Variables and loading modules #
#################################

module load bwa/0.7.15
module load samtools/1.3 #need to use 1.3 or the "samtools view" command doesn't work 

# Genome, aka for us cDNA
db=/bigdata/jinkersonlab/shared/space/data/tomato_genom_annotation/ITAG4.0_cDNA.fasta
#echo $db
# Reads
read_loc=/bigdata/jinkersonlab/shared/space/data/usftp21.novogene.com/raw_data/all_samples
#reads_loc_1=/bigdata/jinkersonlab/shared/space/data/usftp21.novogene.com/raw_data/M1/*1.fq.gz
#reads_loc_2=/bigdata/jinkersonlab/shared/space/data/usftp21.novogene.com/raw_data/M1/*2.fq.gz
out_loc=/bigdata/jinkersonlab/shared/space/sandbox/RNASeq_template_Heinz/results/

# Organism
#organism="Euplotes"

##################### 
# Setup Environment #
#####################
#if [ "$SLURM_CPUS_PER_TASK" == "" ]; then
threads=24 #the number of threads is equal to the number of cpus specified in SBATCH --cpus-per-task above, having more threads will vastly improve the spead of the code by using multiple cpus to complete individual tasks where $threads are specified below
#else
#threads=$SLURM_CPUS_PER_TASK
#fi


########
# Main #
########
#bwa mem $db $reads_loc_1 $reads_loc_2 > $out_loc
cd $read_loc
for read1_file in `ls *1.fq.gz`
do
    fastq_name=$(echo $read1_file| cut -f1 -d '_') #this creates a standared name for the seq file by removinf everything after the "_" in the file name which we call to name our files down stream as well as creat a variable for our read 2 file 
    read2_file=${fastq_name}_2.fq.gz
    echo "Processing ${read1_file} and ${read2_file}"
    echo "-----------------------------"
    echo 'bwa mem'
    #load bwa/
    bwa mem -t $threads ${db} ${read1_file} ${read2_file} > ${out_loc}${fastq_name}_mapped.sam
    echo 'Filter SAM file (quality 30), output to BAM file'
    
    module load samtools/1.3
    #load module
    echo "done"
    samtools view -bS ${out_loc}${fastq_name}_mapped.sam > ${out_loc}${fastq_name}_mapped_filtered.bam
    #output the BAM file from the SAM file generated by bwa
    
    echo 'samtools sort'
    samtools sort -@ $threads ${out_loc}${fastq_name}_mapped_filtered.bam -o ${out_loc}${fastq_name}_mapped_filtered_sort;
    echo 'samtools index'
    samtools index ${out_loc}${fastq_name}_mapped_filtered_sort;
    echo 'generate counts'
    samtools idxstats ${out_loc}${fastq_name}_mapped_filtered_sort > ${out_loc}${fastq_name}_mapped_filtered_sort.counts
    echo 'Getting 1st and 3rd columns'
    awk -F"\t" '{print $1 "\t" $3}' ${out_loc}${fastq_name}_mapped_filtered_sort.counts > ${out_loc}${fastq_name}_mapped_filtered_sort.extract_count
    echo '----------done with one--------'
    done
